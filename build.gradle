plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.diffplug.spotless' version '6.23.3'
}

group = 'com.cpms'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()

    // e-iceblue : spire
    maven {
        url 'https://repo.e-iceblue.com/nexus/content/groups/public/'
    }
}

ext {
    JJWT_VERSION = "0.11.5"
}

dependencies {
    // Spring Boot Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.2'  // MariaDB 드라이버

    // JSON Web Token
    implementation "io.jsonwebtoken:jjwt-api:${JJWT_VERSION}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${JJWT_VERSION}"
    runtimeOnly "io.jsonwebtoken:jjwt-gson:${JJWT_VERSION}"

    // Spring Cloud OpenFeign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.0'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Security
    implementation 'org.springframework.security:spring-security-crypto'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Commons Libraries
    implementation 'org.apache.commons:commons-lang3'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // sms
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.1'
}

ext {
    set('springCloudVersion', "2023.0.2")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('compileJava') {
    dependsOn spotlessApply
}

def querydslDir = "src/main/generated"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    duplicatesStrategy = 'exclude'
}

spotless {
    java {
        // Google Java 포맷 적용
        googleJavaFormat().aosp()
        // 아래 순서로 import문 정렬
        importOrder('java', 'javax', 'jakarta', 'org', 'com')
        // 사용하지 않는 import 제거
        removeUnusedImports()
        // 각 라인 끝에 있는 공백을 제거
        trimTrailingWhitespace()
        // 파일 끝에 새로운 라인 추가
        endWithNewline()
    }
}
